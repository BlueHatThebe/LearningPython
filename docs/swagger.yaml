basePath: /api/v1/
definitions:
  handlers.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.loginSampleResponse200:
    properties:
      message:
        example: User Logged in successfully
        type: string
      status:
        example: success
        type: string
      statusCode:
        example: 200
        type: integer
      token:
        example: b6d4a7e1d2d841a1afe874a2a5c15d8b
        type: string
    type: object
  handlers.loginSampleResponseError401:
    properties:
      message:
        example: Invalid Credentials
        type: string
      status:
        example: error
        type: string
      statusCode:
        example: 401
        type: integer
    type: object
  handlers.loginSampleResponseError500:
    properties:
      message:
        example: An error occured
        type: string
      status:
        example: error
        type: string
      statusCode:
        example: 500
        type: integer
    type: object
  handlers.validateSampleResponse200:
    properties:
      data:
        properties:
          user:
            $ref: '#/definitions/handlers.validateSampleResponse200User'
        type: object
      message:
        example: Request successful
        type: string
      status:
        example: success
        type: string
      statusCode:
        example: 200
        type: integer
      token:
        example: auth-token
        type: string
    type: object
  handlers.validateSampleResponse200User:
    properties:
      email:
        example: user@example.com
        type: string
      has2FA:
        example: true
        type: boolean
      id:
        example: user-id
        type: string
      isFreezed:
        example: true
        type: boolean
      isVerified:
        example: true
        type: boolean
      lastLogin:
        example: "2024-07-22T14:30:00Z"
        type: string
      role:
        $ref: '#/definitions/handlers.validateSampleResponseRole'
    type: object
  handlers.validateSampleResponseRole:
    properties:
      id:
        example: admin
        type: string
      permissions:
        example:
        - canTransact
        - ' canWithdraw'
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: This is the Authentication and Authrization micro-service for the FamTrust
    Web App.
  title: FamTrust API Backend - Auth
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login to FamTrust
      operationId: login
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.loginSampleResponse200'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.loginSampleResponseError401'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.loginSampleResponseError500'
      summary: Login to FamTrust
      tags:
      - Auth
  /validate:
    get:
      consumes:
      - application/json
      description: Validate User Login Token
      operationId: validate
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.validateSampleResponse200'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.loginSampleResponseError401'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.loginSampleResponseError500'
      security:
      - BearerAuth: []
      summary: Validate User Login Token
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
